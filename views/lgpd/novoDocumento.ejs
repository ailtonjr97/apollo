<%- include('../partials/sidebar') %>
<link rel="stylesheet" href="/css/table.css" />
<link rel="stylesheet" href="/css/button8.css" />
<link rel="stylesheet" href="/css/loading.css" />

<style>
.drop-container {
  position: relative;
  display: flex;
  gap: 10px;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  height: 200px;
  padding: 20px;
  border-radius: 10px;
  border: 2px dashed #555;
  color: #444;
  cursor: pointer;
  transition: background .2s ease-in-out, border .2s ease-in-out;
}

.drop-container:hover,
.drop-container.drag-active {
  background: #eee;
  border-color: #111;
}

.drop-container:hover .drop-title,
.drop-container.drag-active .drop-title {
  color: #222;
}

.drop-title {
  color: #444;
  font-size: 20px;
  font-weight: bold;
  text-align: center;
  transition: color .2s ease-in-out;
}

input[type=file] {
  width: 350px;
  max-width: 100%;
  color: #444;
  padding: 5px;
  background: #fff;
  border-radius: 10px;
  border: 1px solid #555;
}

input[type=file]::file-selector-button {
  margin-right: 20px;
  border: none;
  background: #084cdf;
  padding: 10px 20px;
  border-radius: 10px;
  color: #fff;
  cursor: pointer;
  transition: background .2s ease-in-out;
}

input[type=file]::file-selector-button:hover {
  background: #0d45a5;
}
</style>

<div class="row mt-2">
    <h1>Novo Documento</h1>
</div>
<form action="">
<div class="row">
    <div class="col-lg-6">
        <div id="carouselExampleIndicators" class="carousel slide" data-ride="carousel">
            <ol class="carousel-indicators">
              <li data-target="#carouselExampleIndicators" data-bs-slide-to="0" class="active"></li>
              <li data-target="#carouselExampleIndicators" data-bs-slide-to="1"></li>
              <li data-target="#carouselExampleIndicators" data-bs-slide-to="2"></li>
            </ol>
            <div class="carousel-inner">
              <div class="carousel-item active">
                <embed src="" type="application/pdf" style="min-width: 100%; max-width: 100%; height: 100%;" id="imagem" class="campoPdf">
              </div>
              <div class="carousel-item">
                <embed src="" type="application/pdf" style="min-width: 100%; height: 100%;" id="imagem" class="campoPdf">
              </div>
              <div class="carousel-item">
                <embed src="" type="application/pdf" style="min-width: 100%; height: 100%;" id="imagem" class="campoPdf">
              </div>
            </div>
            <a class="carousel-control-prev" href="#carouselExampleIndicators" role="button" data-bs-slide="prev">
              <span class="carousel-control-prev-icon" aria-hidden="true"></span>
              <span class="sr-only">Previous</span>
            </a>
            <a class="carousel-control-next" href="#carouselExampleIndicators" role="button" data-bs-slide="next">
              <span class="carousel-control-next-icon" aria-hidden="true"></span>
              <span class="sr-only">Next</span>
            </a>
          </div>
    </div>
    <div class="col">
        <div class="row mt-2">
            <div class="col">
                <div class="form-floating">
                    <input type="text" class="form-control" id="nome" placeholder="Nome:">
                    <label for="nome">Nome:</label>
                </div>
            </div>
        </div>
        <div class="row mt-2">
            <div class="col">
                <div class="form-floating">
                    <input type="text" class="form-control" id="subtitulo" placeholder="Subtítulo:">
                    <label for="subtitulo">Subtítulo:</label>
                </div>
            </div>
        </div>
        <div class="row mt-2">
            <div class="col">
                <div class="form-floating">
                    <select class="form-select" id="tipo">
                      <option selected>Open this select menu</option>
                      <option value="1">One</option>
                      <option value="2">Two</option>
                      <option value="3">Three</option>
                    </select>
                    <label for="tipo">Tipo:</label>
                  </div>
            </div>
        </div>
        <div class="row mt-2">
            <div class="col">
                <div class="form-floating">
                    <textarea class="form-control" placeholder="Observação:" id="obs"></textarea>
                    <label for="obs">Observação:</label>
                </div>
            </div>
        </div>
        <div class="row mt-2">
            <div class="col" id="dropcontainer">
                <label for="images" class="drop-container mt-2" id="dropcontainer" ondrop="dropHandler(event)">
                    <span class="drop-title">Arraste o arquivo aqui (Somente um arquivo por vez)</span>
                    ou
                    <input type="file" id="images" accept="application/pdf" required>
                </label>
            </div>
        </div>
    </div>
</div>
</form>

<script>
const pdfFile = document.getElementById('images')
const btnUpload = document.getElementById('btnUpload')
const resultText = document.getElementById('nome')

function dropHandler(ev) {
  console.log("File(s) dropped");
  ev.preventDefault();

  if (ev.dataTransfer.items) {
    [...ev.dataTransfer.items].forEach((item, i) => {
      if (item.kind === "file") {
        const file = item.getAsFile();
        console.log(`… file[${i}].name = ${file.name}`);
        document.getElementsByClassName('campoPdf')[i].src = URL.createObjectURL(file)
      }
    });
  } else {
    [...ev.dataTransfer.files].forEach((file, i) => {
      console.log(`… file[${i}].name = ${file.name}`);
    });
  }
}

// images.onchange = evt => {
//   const [file] = images.files
//   if (file) {
//     console.log(file);
//     imagem.src = URL.createObjectURL(file)
//   }

//   const formData = new FormData();
//     formData.append('pdfFile', pdfFile.files[0])

//     const formatada = `${pdfFile.files[0].name}`.replace('.PDF', '')

//     resultText.value = formatada

//     // fetch('/lgpd/ler-pdf', {
//     //     method: "post",
//     //     body: formData
//     // }).then(response => {
//     //     return response.text()
//     // }).then(extractedText =>{
//     //     resultText.value = extractedText
//     // })
// }

//   const dropContainer = document.getElementById("dropcontainer")
//   const fileInput = document.getElementById("images")

//   dropContainer.addEventListener("dragover", (e) => {
//     // prevent default to allow drop
//     e.preventDefault()
//   }, false)

//   dropContainer.addEventListener("dragenter", () => {
//     dropContainer.classList.add("drag-active")
//   })

//   dropContainer.addEventListener("dragleave", () => {
//     dropContainer.classList.remove("drag-active")
//   })

//   dropContainer.addEventListener("drop", (e) => {
//     e.preventDefault()
//     dropContainer.classList.remove("drag-active")
//     fileInput.files = e.dataTransfer.files
//   })
</script>